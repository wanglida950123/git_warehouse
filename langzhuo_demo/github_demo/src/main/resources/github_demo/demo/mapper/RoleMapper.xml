<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="github_demo.demo.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="github_demo.demo.entity.Role">
    <id column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_ms" jdbcType="VARCHAR" property="roleMs" />
    <result column="role_type" jdbcType="VARCHAR" property="roleType" />
    <result column="jym" jdbcType="VARCHAR" property="jym" />
  </resultMap>
  <sql id="Base_Column_List">
    role_id, role_name, role_ms, role_type, jym
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from m_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from m_role
    where role_id = #{roleId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="github_demo.demo.entity.Role">
    insert into m_role (role_id, role_name, role_ms, 
      role_type, jym)
    values (#{roleId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleMs,jdbcType=VARCHAR}, 
      #{roleType,jdbcType=VARCHAR}, #{jym,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="github_demo.demo.entity.Role">
    insert into m_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleMs != null">
        role_ms,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="jym != null">
        jym,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleMs != null">
        #{roleMs,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="jym != null">
        #{jym,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="github_demo.demo.entity.Role">
    update m_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleMs != null">
        role_ms = #{roleMs,jdbcType=VARCHAR},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="jym != null">
        jym = #{jym,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="github_demo.demo.entity.Role">
    update m_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_ms = #{roleMs,jdbcType=VARCHAR},
      role_type = #{roleType,jdbcType=VARCHAR},
      jym = #{jym,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=VARCHAR}
  </update>
</mapper>